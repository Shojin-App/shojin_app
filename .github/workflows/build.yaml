name: Flutter CI

# ワークフローが実行されるトリガーを指定
on:
  push:
    branches:
      - '**'
    paths:
      # このファイル名に合わせてパスを更新
      - '.github/workflows/flutter-ci.yml'
      - 'android/**'
      - 'test/**'
      - 'ios/**'
      - '*.yaml'
      - '*.lock'
      - 'lib/**'

  pull_request:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release'
        type: boolean
        required: true
        default: false
      generate_release_notes:
        description: 'Generate Release Notes'
        type: boolean
        required: true
        default: true
      build_type:
        description: 'APK Build Type (split per ABI or single universal)'
        type: choice
        required: true
        options:
          - split
          - single
        default: 'split'

jobs:
  # --- 変更点: 静的解析とテストを実行するジョブを追加 ---
  # ビルドの前にコードの品質とテストをチェックし、問題があれば早期に失敗させます。
  analyze_and_test:
    name: Analyze & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- 変更点: キャッシュを有効化 ---
      # cache: true を追加することで、Flutter SDKとpubの依存関係がキャッシュされ、
      # 2回目以降の実行が大幅に高速化されます。
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Analyze project source
        run: flutter analyze

      - name: Run tests
        run: flutter test

  # --- 変更点: ジョブ名を 'build' から 'build_android' に変更 ---
  build_android:
    name: Build Android APK
    # 'analyze_and_test' ジョブが成功した場合のみ実行
    needs: analyze_and_test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      build_type: ${{ github.event.inputs.build_type || 'split' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # --- 変更点: こちらのジョブでもキャッシュを有効化 ---
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      # 分割APKをビルド (デフォルトまたは手動で'split'を選択した場合)
      - name: Build APK (Split per ABI)
        if: "contains(needs.build_android.outputs.build_type, 'split')"
        run: flutter build apk --release --split-per-abi --build-number=${{ github.run_number }}

      # 単一APKをビルド (手動で'single'を選択した場合)
      - name: Build APK (Single Universal)
        if: "contains(needs.build_android.outputs.build_type, 'single')"
        run: flutter build apk --release --build-number=${{ github.run_number }}
        
      - name: Read version from pubspec.yaml
        id: get_version
        run: |
          echo "version=$(grep '^version: ' pubspec.yaml | sed 's/version: //')" >> $GITHUB_OUTPUT

      # 分割APKをアップロード
      - name: Upload Split APKs Artifact
        if: "contains(needs.build_android.outputs.build_type, 'split')"
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-*-release.apk

      # 単一APKをアップロード
      - name: Upload Single APK Artifact
        if: "contains(needs.build_android.outputs.build_type, 'single')"
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

  deploy:
    name: Deploy to GitHub Release
    runs-on: ubuntu-latest
    # 'build_android' ジョブの完了を待つ
    needs: build_android
    if: github.event.inputs.release == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: release-apk
          path: artifacts/apk/

      # 分割APKをリリース
      - name: Release with Split APKs
        if: "contains(needs.build_android.outputs.build_type, 'split')"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build_android.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: ${{ github.event.inputs.generate_release_notes }}
          files: artifacts/apk/app-*-release.apk

      # 単一APKをリリース
      - name: Release with Single APK
        if: "contains(needs.build_android.outputs.build_type, 'single')"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build_android.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: ${{ github.event.inputs.generate_release_notes }}
          files: artifacts/apk/app-release.apk