name: Release APKs

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Existing release tag to upload assets to (required for manual runs)'
        required: false
        type: string
      flavor:
        description: 'Which flavor to build'
        type: choice
        required: true
        options:
          - oss
          - fdroid
          - both
        default: both
      build_type:
        description: 'APK Build Type (split per ABI or single universal)'
        type: choice
        required: true
        options:
          - split
          - single
        default: split
      run_tests:
        description: 'Run Flutter tests before building APKs'
        type: boolean
        required: true
        default: false

permissions:
  contents: write

concurrency:
  group: release-apk-${{ github.event.release.tag_name || github.event.inputs.tag_name || github.ref }}
  cancel-in-progress: false

jobs:
  build_and_attach:
    name: Build and attach APKs
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: ${{ github.event.inputs.build_type || 'split' }}
      FLAVOR: ${{ github.event.inputs.flavor || 'both' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get || flutter pub get || flutter pub get

      - name: Analyze project source (optional)
        if: ${{ github.event.inputs.run_tests == 'true' }}
        run: flutter analyze --no-fatal-warnings || true

      - name: Run tests (optional)
        if: ${{ github.event.inputs.run_tests == 'true' }}
        run: flutter test

      - name: Determine target release tag
        id: release_meta
        env:
          EVENT_NAME: ${{ github.event_name }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          INPUT_TAG: ${{ github.event.inputs.tag_name }}
        run: |
          if [ "$EVENT_NAME" = "release" ]; then
            if [ -z "$RELEASE_TAG" ]; then
              echo "::error::Release tag not detected." >&2
              exit 1
            fi
            echo "tag=$RELEASE_TAG" >> "$GITHUB_OUTPUT"
          else
            if [ -z "$INPUT_TAG" ]; then
              echo "::error::Please provide tag_name when running manually." >&2
              exit 1
            fi
            echo "tag=$INPUT_TAG" >> "$GITHUB_OUTPUT"
          fi

      - name: Build APK (Split per ABI, OSS)
        if: ${{ contains(env.BUILD_TYPE, 'split') && (env.FLAVOR == 'oss' || env.FLAVOR == 'both') }}
        run: flutter build apk --flavor oss --release --split-per-abi --build-number=${{ github.run_number }}

      - name: Build APK (Split per ABI, FDroid)
        if: ${{ contains(env.BUILD_TYPE, 'split') && (env.FLAVOR == 'fdroid' || env.FLAVOR == 'both') }}
        run: flutter build apk --flavor fdroid --release --split-per-abi --build-number=${{ github.run_number }} --dart-define=ENABLE_SELF_UPDATE=false

      - name: Build APK (Single Universal, OSS)
        if: ${{ contains(env.BUILD_TYPE, 'single') && (env.FLAVOR == 'oss' || env.FLAVOR == 'both') }}
        run: flutter build apk --flavor oss --release --build-number=${{ github.run_number }}

      - name: Build APK (Single Universal, FDroid)
        if: ${{ contains(env.BUILD_TYPE, 'single') && (env.FLAVOR == 'fdroid' || env.FLAVOR == 'both') }}
        run: flutter build apk --flavor fdroid --release --build-number=${{ github.run_number }} --dart-define=ENABLE_SELF_UPDATE=false

      - name: Upload Split APKs (OSS)
        if: ${{ contains(env.BUILD_TYPE, 'split') && (env.FLAVOR == 'oss' || env.FLAVOR == 'both') }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release_meta.outputs.tag }}
          draft: false
          prerelease: false
          files: build/app/outputs/flutter-apk/app-oss-*-release.apk

      - name: Upload Split APKs (FDroid)
        if: ${{ contains(env.BUILD_TYPE, 'split') && (env.FLAVOR == 'fdroid' || env.FLAVOR == 'both') }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release_meta.outputs.tag }}
          draft: false
          prerelease: false
          files: build/app/outputs/flutter-apk/app-fdroid-*-release.apk

      - name: Upload Single APK (OSS)
        if: ${{ contains(env.BUILD_TYPE, 'single') && (env.FLAVOR == 'oss' || env.FLAVOR == 'both') }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release_meta.outputs.tag }}
          draft: false
          prerelease: false
          files: build/app/outputs/flutter-apk/app-oss-release.apk

      - name: Upload Single APK (FDroid)
        if: ${{ contains(env.BUILD_TYPE, 'single') && (env.FLAVOR == 'fdroid' || env.FLAVOR == 'both') }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release_meta.outputs.tag }}
          draft: false
          prerelease: false
          files: build/app/outputs/flutter-apk/app-fdroid-release.apk
